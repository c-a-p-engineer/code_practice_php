name: PullRequestReview

on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  phpunit:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: develop
          MYSQL_PASSWORD: p@ssw0rd
          MYSQL_DATABASE: develop
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - name: Run PHPUnit with testdox output
      run: |
        ./vendor/bin/phpunit ./tests/ --testdox > phpunit.txt || echo "PHPUnit tests failed" > phpunit_fail.txt
      continue-on-error: true

    - name: Comment PHPUnit testdox result
      uses: thollander/actions-comment-pull-request@v2
      with:
        filePath: phpunit.txt
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Check for PHPUnit failures and comment
      run: |
        if [ -f "phpunit_fail.txt" ]; then
          echo "Failed tests detected, exiting with error."
          exit 1
        fi

  phpsyntax:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup environment
      uses: ./.github/actions/setup_php
    - name: Run PHP Syntax
      run: find ./training/ -name "*.php" -exec sh -c 'php -l "$1" | grep -q "No syntax errors" || (echo "Error in $1" && php -l "$1")' _ {} \; > phpsyntax.txt
    - name: Comment PHP Syntax
      uses: thollander/actions-comment-pull-request@v2
      with:
        filePath: phpsyntax.txt
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Check for PHP Syntax errors and fail if found
      run: |
        if [ -s "phpsyntax.txt" ]; then
          echo "Syntax errors found in PHP files, exiting with error."
          exit 1
        fi

  phpstan:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup environment
      uses: ./.github/actions/setup_php
    - name: Run PHPStan
      run: |
        ./vendor/bin/phpstan analyse ./training/ --level=8 --no-progress --error-format=checkstyle
        | reviewdog -f=checkstyle -name="phpstan" -reporter=github-pr-review -fail-on-error=true
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  phpcs:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2
    - name: Setup environment
      uses: ./.github/actions/setup_php
    - name: Run PHP_CodeSniffer
      run: |
      ./vendor/bin/phpcs ./training/ --report=checkstyle
      | reviewdog -f=checkstyle -name="phpcs" -reporter=github-pr-review -fail-on-error=true
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

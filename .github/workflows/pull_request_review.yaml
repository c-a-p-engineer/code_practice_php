# プルリクエストレビューのワークフローを定義
name: PullRequestReview

# プルリクエストが開かれたり、同期されたりしたときに実行
on:
  pull_request:
    types:
      - opened
      - synchronize

jobs:
  # PHPUnitジョブ
  phpunit:
    runs-on: ubuntu-latest  # 最新のUbuntuランナーを使用

    # MySQLサービスを定義
    services:
      mysql:
        image: mysql:8.0
        ports:
          - 3306:3306
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_USER: develop
          MYSQL_PASSWORD: p@ssw0rd
          MYSQL_DATABASE: develop
        options: >-
          --health-cmd "mysqladmin ping -h 127.0.0.1"
          --health-interval 20s
          --health-timeout 10s
          --health-retries 10

    steps:
    # コードをチェックアウト
    - uses: actions/checkout@v4
    # Setup PHP
    - name: Setup PHP
      uses: ./.github/actions/setup_php 
    # Webサーバーの起動
    - name: Start Web Server
      working-directory: training
      run: php -S localhost:8000 &
    # PHPUnitを使用してテストを実行し、テストの結果をコメント
    - name: Run PHPUnit output
      # PHPUnitを実行
      run: >
        ./vendor/bin/phpunit ./tests/ > phpunit.txt
        || echo "PHPUnit tests failed" > phpunit_fail.txt
      # PHPUnit実行時の環境変数設定
      env:
        PORT: 8000
      # エラーがあっても処理を続行
      continue-on-error: true

    # PHPUnitのテスト結果をプルリクエストにコメント
    - name: Comment PHPUnit result
      uses: thollander/actions-comment-pull-request@v2
      with:
        # phpunit.txtファイルの内容をコメント
        filePath: phpunit.txt
        # GitHubトークンを使用してコメントを投稿
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  

    # PHPUnitの失敗を検出し、エラーメッセージをコメント
    - name: Check for PHPUnit failures and comment
      # phpunit_fail.txtファイルが存在する場合、エラーとして処理を終了
      run: |
        if [ -f "phpunit_fail.txt" ]; then  
          echo "Failed tests detected, exiting with error."
          exit 1
        fi

  # PHPSyntaxジョブ
  phpsyntax:
    runs-on: ubuntu-latest
    steps:
    # コードをチェックアウト
    - uses: actions/checkout@v4
    # Setup PHP
    - name: Setup PHP
      uses: ./.github/actions/setup_php
    # PHP Syntax Check
    - name: Run PHP Syntax
      run: >
        find ./training/ -name "*.php" -exec sh -c 'php -l "$1"
        | grep -q "No syntax errors"
        || (echo "Error in $1" && php -l "$1")' _ {} \; > phpsyntax.txt
    # PHP Syntax Comment
    - name: Comment PHP Syntax
      uses: thollander/actions-comment-pull-request@v2
      continue-on-error: true
      with:
        filePath: phpsyntax.txt
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - name: Check for PHP Syntax errors and fail if found
      run: |
        if [ -s "phpsyntax.txt" ]; then
          echo "Syntax errors found in PHP files, exiting with error."
          exit 1
        else
          exit 0
        fi

  # PHPStanジョブ
  phpstan:
    runs-on: ubuntu-latest
    steps:
    # コードをチェックアウト
    - uses: actions/checkout@v4
    # Setup PHP
    - name: Setup PHP
      uses: ./.github/actions/setup_php
    # PHPStan
    - name: Run PHPStan
      run: >
        ./vendor/bin/phpstan analyse ./training/ --level=8 --no-progress --error-format=checkstyle
        | reviewdog -f=checkstyle -name="phpstan" -reporter=github-pr-review -fail-on-error=true
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # PHP_CodeSnifferジョブ
  phpcs:
    runs-on: ubuntu-latest
    steps:
    # コードをチェックアウト
    - uses: actions/checkout@v4
    # Setup PHP
    - name: Setup PHP
      uses: ./.github/actions/setup_php
    # PHP_CodeSniffer
    - name: Run PHP_CodeSniffer
      run: >
        ./vendor/bin/phpcs ./training/ --report=checkstyle --standard=PSR12
        | reviewdog -f=checkstyle -name="phpcs" -reporter=github-pr-review -fail-on-error=true
      env:
        REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

# Workflow の名前
name: PullRequestReview

# 発火イベント
on:
  # プルリクエスト時に実行
  pull_request:
    types:
      # 新しいプルリクエストがオープンされた場合
      - opened
      # プルリクエストのブランチに新しいコミットがプッシュされた場合
      - synchronize

# ジョブ定義
jobs:
  build:
    # 実行環境
    runs-on: ubuntu-latest
    
    steps:
      # リポジトリをチェックアウト
      - name: Checkout code
        uses: actions/checkout@v2

      # Docker イメージをキャッシュ
      - name: Cache Docker images
        uses: satackey/action-docker-layer-caching@v0.0.11
        continue-on-error: true

      # Docker Compose でコンテナを起動
      - name: Docker Compose Up
        run: docker-compose build --no-cache && docker-compose up -d
        working-directory: ./.docker

      - name: Check directory structure
        run: |
          docker-compose exec -T php /bin/bash -c "ls -al"
        working-directory: ./.docker

      - name: Composer Install
        run: |
          docker-compose exec -T php /bin/bash -c "composer install"
        working-directory: ./.docker

      # - name: Check directory structure
      #   run: |
      #     docker-compose exec -T php /bin/bash -c "ls -al ./vendor/bin"
      #   working-directory: ./.docker

      # PHPUnit の testdox 結果をテキストファイルへ出力
      - name: Run PHPUnit with testdox
        # run: docker-compose exec -T php ./vendor/bin/phpunit ./tests/ --testdox >> phpunit-testdox.txt
        run: |
          docker-compose exec -T php /bin/bash -c "./vendor/bin/phpunit ./tests/ --testdox > phpunit-testdox.txt"
        working-directory: ./.docker

      # ディレクトリの内容をリストアップ
      - name: List directory contents
        run: ls -l

      # PHPUnit の testdox 結果をプルリクエストにコメント
      - name: Comment PHPUnit testdox result
        uses: thollander/actions-comment-pull-request@v2
        with:
          filePath: phpunit-testdox.txt
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # phpstan を実行して結果を reviewdog でコメント
      - name: Run phpstan
        run: docker-compose exec -T php ./vendor/bin/phpstan analyse | reviewdog -f=checkstyle -name="phpstan" -reporter=github-pr-review
        working-directory: ./.docker

      # php-cs-fixer を実行して結果を reviewdog でコメント
      - name: Run php-cs-fixer
        run: docker-compose exec -T php ./vendor/bin/php-cs-fixer fix --dry-run --format=checkstyle | reviewdog -f=checkstyle -name="php-cs-fixer" -reporter=github-pr-review
        working-directory: ./.docker